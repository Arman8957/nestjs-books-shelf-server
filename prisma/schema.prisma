// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id             Int @id @default(autoincrement())
  fullName       String
  email          String @unique
  phoneNumber    String? 
  password       String
  favouriteGenre String?
  profile        Profile?
  education      String?
  role           Role    @default(USER)
  posts          PostEBook[]
  referredBy     String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([fullName, id])
}


model Profile {
  id       Int    @id @default(autoincrement())
  email    String @unique
  bio      String
  imageUrl String
  user     User   @relation(fields: [userId], references: [id])
  userId   Int    @unique
 
  @@index([id])
}


model PostEBook{
  id         Int        @id @default(autoincrement())
  writerName String
  bookName   String
  type       String  //"audio", "E-Book", "Hard Copy"
  bookImage  String?
  title      String?
  published  Boolean    @default(false)
  author     User       @relation(fields: [authorId], references: [id] )
  authorId   Int
  categories Category[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@index([id, title])
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts PostEBook[]
}

enum Role{
  USER
  ADMIN
}

